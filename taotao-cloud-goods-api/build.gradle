description = "系统中心api"

apply plugin: "com.google.protobuf"

dependencies {
    api "io.github.shuigedeng:taotao-cloud-starter-openfeign"

    compileOnly "io.github.shuigedeng:taotao-boot-starter-seata"
    compileOnly "io.github.shuigedeng:taotao-boot-starter-office"
    compileOnly "io.github.shuigedeng:taotao-boot-starter-dubbo"

    //https://search.maven.org/artifact/com.google.protobuf/protobuf-java
    api "com.google.protobuf:protobuf-java:3.25.6"
    //https://search.maven.org/artifact/com.google.protobuf/protobuf-java-util
    api "com.google.protobuf:protobuf-java-util:3.25.6"
    api "com.google.protobuf:protobuf-javalite:3.25.6"

    //  1.3.5  Java 9+ compatibility - Do NOT update to 2.0.0
    // protobuf生成的代码带有javax.annotation.Generated 此注解只有在1.3.5中有  在2版本之后换成了jakarta.annotation.Generated
    // 等之后支持了jakarta就可以用2版本了
    //api 'jakarta.annotation:jakarta.annotation-api:1.3.5'
}

protobuf {
    //指定protoc编译器位置 在 protoc 模块下，可以指定多个配置，但是会以最后一个配置为准。
    protoc {
        //https://repo1.maven.org/maven2/com/google/protobuf/protoc/
        //直接使用Maven Central上已经编译好的protoc编译器，
        artifact = "com.google.protobuf:protoc:3.25.6"
        //指定本地已经安装的protoc编译器
        //path = '/usr/local/bin/protoc'
    }
    //generatedFilesBaseDir = "$projectDir/src/generated"
    clean {
        delete generatedFilesBaseDir
    }
    //指定protoc运行插件
    plugins {
        grpc {
            artifact = "io.grpc:protoc-gen-grpc-java:1.68.2"
        }
        //javalite {
        //    // The codegen for lite comes as a separate artifact
        //    artifact = 'com.google.protobuf:protoc-gen-javalite:3.0.1'
        //}
    }
    generateProtoTasks {
        all()*.plugins {
            grpc {
                option 'jakarta_omit'
                option '@generated=omit'
            }
        }
    }
}

configurations {
    configureEach {
        //resolutionStrategy {
        //    //force "org.codehaus.groovy:groovy:3.0.23"
        //    force 'jakarta.annotation:jakarta.annotation-api:1.3.5'
        //}

        //exclude group: "javax.annotation", module: "javax.annotation-api"
        //exclude group: "javax.activation", module: "javax.activation-api"
        //exclude group: "com.google.code.findbugs", module: "jsr305"
    }
}

//tasks.register('javaxReplaceToJakarta') {
//    doLast {
//        def treeFile = fileTree(
//                dir: "${project.layout.buildDirectory.asFile.get()}/generated/source/proto/main/grpc",
//                includes: ["**/*.java"])
//
//        treeFile.each({
//            File f ->
//                {
//                    def text = f.text
//                    text = text.replaceAll("javax", "jakarta")
//                    f.write(text, "UTF-8")
//                }
//        })
//    }
//}
//
//generateProto.finalizedBy javaxReplaceToJakarta
